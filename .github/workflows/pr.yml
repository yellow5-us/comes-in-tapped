name: '[PR] Run Playtests on PR'

on:
  pull_request:
    branches:
      - main
    paths:
      - 'decks/**.dck'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  cache:
    name: Build cache
    uses: ./.github/workflows/cache.yml

  decks:
    name: Get updated decks
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.decks.outputs.list }}
      count: ${{ steps.decks.outputs.count }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get deck list
        id: decks
        run: |
          list='[]'
          for file in $(git --no-pager diff --name-only ${{ github.event.pull_request.head.sha }} ${{ github.event.pull_request.base.sha }} -- | grep '^decks\/' | grep '\.dck$')
          do
            name=$(basename $file | sed -r 's/\.dck$//')
            if [ ! -z "$name" ];
            then
              list=$(echo $list | jq -c '. += [{"file": "'$file'", "name": "'$name'"}]')
            fi
          done

          echo 'list={"include": '$list'}' >> $GITHUB_OUTPUT
          echo "count=$(echo $list | jq length)" >> $GITHUB_OUTPUT

  playtest:
    name: Playtest ${{ matrix.name }}
    if: ${{ needs.decks.outputs.count > 0 }}
    needs: [cache, decks]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.decks.outputs.list) }}
    uses: ./.github/workflows/playtest.yml
    with:
      deck_file_player: ${{ matrix.file }}
      rounds: ${{ vars.ROUNDS }}
      wins_required: ${{ vars.WINS_REQUIRED }}
