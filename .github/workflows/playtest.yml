name: 'Run Playtests'

on:
  workflow_dispatch:
    inputs:
      deck_file_player:
        description: Player deck file
        type: string
        required: true
        default: 'decks/prinny/forge/complete/absol.dck'
      rounds:
        description: Rounds
        type: string
        required: true
        default: '7'
      wins_required:
        description: Wins required
        type: string
        default: '0'
  workflow_call:
    inputs:
      deck_file_player:
        description: Player deck file
        type: string
        required: true
      rounds:
        description: Rounds
        type: string
        required: true
        default: '7'
      wins_required:
        description: Wins required
        type: string
        default: '0'

permissions:
  id-token: write
  contents: read

jobs:
  cache:
    name: 'Build cache'
    uses: ./.github/workflows/cache.yml

  playtest_info:
    name: Get the playtest info
    runs-on: ubuntu-latest
    outputs:
      rounds: ${{ steps.game.outputs.rounds }}
      wins_required: ${{ steps.game.outputs.wins_required }}
      deck_name_player: ${{ steps.player.outputs.deck_name }}
      deck_name_opponent_list: ${{ steps.opponent.outputs.deck_names }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Game info
        id: game
        run: |
          rounds="$(( ${{ inputs.rounds }} + 0 ))"
          if [[ "$rounds" -lt 1 ]]; then echo "Rounds is $rounds"; exit 1; fi
          echo "rounds=${rounds}" >> $GITHUB_OUTPUT

          wins_required="$(( ${{ inputs.wins_required }} + 0 ))"
          if [ "$wins_required" -lt 0 ] || [ "$wins_required" -gt "$rounds" ]; then echo "Wins required is $wins_required"; exit 1; fi
          echo "wins_required=${wins_required}" >> $GITHUB_OUTPUT

      - name: Player deck info
        id: player
        run: |
          if [ ! -f "${{ inputs.deck_file_player }}" ]; then echo "${{ inputs.deck_file_player }} not found"; exit 1; fi
          deck_name=$(echo '${{ inputs.deck_file_player }}' | sed -r 's/^.+\/([^\/]+)\.dck$/\1/')
          echo "deck_name=${deck_name}" >> $GITHUB_OUTPUT

      - name: Opponent deck info
        id: opponent
        working-directory: playtest
        run: |
          echo 'deck_names={"deck_name_opponent": ["'$(ls *.dck | sed -r 's/\.dck$//' | tr '\n' ' ' | sed -r 's/ $//' | sed -r 's/ /","/g')'"]}' >> $GITHUB_OUTPUT

  playtest:
    name: 'Playtest ${{ needs.playtest_info.outputs.deck_name_player }} vs. ${{ matrix.deck_name_opponent }} (${{ needs.playtest_info.outputs.rounds }}x)'
    needs: [cache, playtest_info]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.playtest_info.outputs.deck_name_opponent_list) }}
    uses: ./.github/workflows/simulation.yml
    with:
      deck_name_player: '${{ needs.playtest_info.outputs.deck_name_player }}'
      deck_file_player: '${{ inputs.deck_file_player }}'
      deck_name_opponent: '${{ matrix.deck_name_opponent }}'
      deck_file_opponent: 'playtest/${{ matrix.deck_name_opponent }}.dck'
      rounds: '${{ needs.playtest_info.outputs.rounds }}'
      wins_required: '${{ needs.playtest_info.outputs.wins_required }}'
