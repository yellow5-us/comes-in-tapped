name: 'Run simulation'

on:
  workflow_dispatch:
    inputs:
      rounds:
        description: Rounds
        type: string
        required: true
        default: 3
      deck_1:
        description: Deck 1
        type: string
        required: true
      deck_2:
        description: Deck 2
        type: string
        required: true
  workflow_call:
    inputs:
      rounds:
        description: Rounds
        type: string
        required: true
        default: 3
      deck_1:
        description: Deck 1
        type: string
        required: true
      deck_2:
        description: Deck 2
        type: string
        required: true

env:
  FORGE_SNAPSHOT_URL: https://downloads.cardforge.org/dailysnapshots/

jobs:
  sanitize:
    name: Sanitize inputs
    outputs:
      rounds: ${{ steps.sanitize.outputs.rounds }}
    runs-on: ubuntu-latest
    steps:
      - name:
        id: sanitize
        run: |
          echo "rounds=$(( ${{ inputs.rounds }} + 0 ))" >> $GITHUB_OUTPUT

  sim:
    name: Run simulation
    needs: [sanitize]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Create deck path
        run: mkdir -p $HOME/.forge/decks

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: ${{ env.HOME }}/.forge/decks/constructed

      - name: Cache Forge install
        id: cache-forge
        uses: actions/cache@v3
        with:
          path: |
            **/forge
          key: forge-${{ hashFiles('**/forge/forge.command') }}
          restore-keys: forge-${{ hashFiles('**/forge/forge.command') }}

      - name: Get latest version
        id: file
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          echo "name=$(curl -s ${{ env.FORGE_SNAPSHOT_URL }} | grep -oE '"forge-gui-desktop.+\.tar.bz2"' | sed -r 's/"//g')" >> $GITHUB_OUTPUT

      - name: Install forge
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          mkdir -p $HOME/forge && cd $HOME/forge
          curl -s ${{ env.FORGE_SNAPSHOT_URL }}${{ steps.file.outputs.name }} -o ./${{ steps.file.outputs.name }} && tar -xf ${{ steps.file.outputs.name }} && rm -f ${{ steps.file.outputs.name }}
          sed -iE 's/SHAREDPARAMS$/SHAREDPARAMS $1 $2 $3 $4 $5 $6 $7 $8 $9/' $HOME/forge/forge.sh

      - name: Run simulation
        working-directory: ${{ env.HOME }}/forge
        run: ./forge.sh sim -d ${{ inputs.deck_1 }} ${{ inputs.deck_2 }} -n 3
